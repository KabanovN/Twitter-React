{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","total","like","className","SearchPanel","props","state","term","onUpdateSearch","bind","evt","target","value","this","setState","updateSearch","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","map","filter","onFilterSelect","active","onClick","PostListItem","onDelete","onToggleLiked","onToggleImportant","classNames","important","liked","PostList","posts","elements","item","obj","key","isEmpty","id","itemProps","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","App","data","deleteItem","addItem","onChangeState","searchItems","filterItems","currentId","textValue","newItem","property","items","length","indexOf","visiblePosts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uYACeA,ECGG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,KACvB,OACI,sBAAKC,UAAU,oBAAf,UACI,gDACA,+BAAKF,EAAL,mJAAyCC,SCPtCE,G,wDCIX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,IAEV,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBALP,E,kDAQnB,SAAeC,GACX,IAAMH,EAAOG,EAAIC,OAAOC,MACxBC,KAAKC,SAAS,CAACP,SACfM,KAAKR,MAAMU,aAAaR,K,oBAG5B,WACI,OACI,uBACIJ,UAAU,4BACVa,KAAK,OACLC,YAAY,yFACZL,MAAOC,KAAKP,MAAMC,KAClBW,SAAUL,KAAKL,qB,GAtBUW,cCH1BC,G,wDCIX,WAAYf,GAAQ,IAAD,8BACf,cAAMA,IACDgB,QAAU,CACX,CAACC,KAAM,MAAOC,MAAO,sBACrB,CAACD,KAAM,OAAQC,MAAO,uEAJX,E,0CAQnB,WAAU,IAAD,OACCF,EAAUR,KAAKQ,QAAQG,KAAI,YAAoB,IAAlBF,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACrC,EAAiC,EAAKlB,MAA/BoB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,eAETC,EAAUF,IAAWH,EAAQ,WAAa,wBAChD,OACI,wBAEInB,UAAS,cAASwB,GAClBC,QAAS,kBAAMF,EAAeJ,IAHlC,SAG0CC,GAFjCD,MAKjB,OACI,qBAAKnB,UAAU,YAAf,SACKkB,Q,GAvB6BF,c,QCH/BU,G,kKCKX,WACI,MAA8EhB,KAAKR,MAA5EkB,EAAP,EAAOA,MAAOO,EAAd,EAAcA,SAAUC,EAAxB,EAAwBA,cAAeC,EAAvC,EAAuCA,kBACnCC,EAAa,+CAUjB,OAXA,EAA0DC,YAItDD,GAAc,cAJlB,EAAqEE,QAQjEF,GAAc,SAId,sBAAK9B,UAAW8B,EAAhB,UACI,sBAAM9B,UAAU,sBAChByB,QAASG,EADT,SAEKR,IAEL,sBAAKpB,UAAU,mDAAf,UACI,wBAAQA,UAAU,kBAClByB,QAASI,EADT,SAEI,mBAAG7B,UAAU,iBAEjB,wBAAQA,UAAU,mBAClByB,QAASE,EADT,SAEI,mBAAG3B,UAAU,kBAEjB,mBAAGA,UAAU,0B,GA7BSgB,c,iBCH3BiB,ECIE,SAAC,GAAyD,IAAxDC,EAAuD,EAAvDA,MAAOP,EAAgD,EAAhDA,SAAUE,EAAsC,EAAtCA,kBAAmBD,EAAmB,EAAnBA,cAE7CO,EAAWD,EAAMb,KAAI,SAAAe,GACvB,GAAoB,kBAATA,GAef,SAAiBC,GACb,IAAK,IAAIC,KAAOD,EACZ,OAAO,EAEP,OAAO,EAnBqBE,CAAQH,GAAO,CAC3C,IAAOI,EAAoBJ,EAApBI,GAAOC,EAAd,YAA2BL,EAA3B,GACA,OACI,oBAAapC,UAAU,kBAAvB,SACI,cAAC,EAAD,2BACQyC,GADR,IAEId,SAAU,kBAAMA,EAASa,IACzBX,kBAAmB,kBAAMA,EAAkBW,IAC3CZ,cAAe,kBAAMA,EAAcY,QALlCA,OAmBrB,OACI,oBAAIxC,UAAU,sBAAd,SACKmC,KC/BEO,G,wDCIX,WAAYxC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTwC,KAAM,IAEV,EAAKC,cAAgB,EAAKA,cAActC,KAAnB,gBACrB,EAAKuC,SAAW,EAAKA,SAASvC,KAAd,gBAND,E,iDASnB,SAAcC,GACVG,KAAKC,SAAS,CACVgC,KAAMpC,EAAIC,OAAOC,U,sBAIzB,SAASF,GACLA,EAAIuC,iBACJpC,KAAKR,MAAM6C,MAAMrC,KAAKP,MAAMwC,MAC5BjC,KAAKC,SAAS,CACVgC,KAAM,O,oBAId,WACI,OACI,uBACI3C,UAAU,sBACV6C,SAAUnC,KAAKmC,SAFnB,UAGI,uBACIhC,KAAK,OACLb,UAAU,8BACVc,YAAY,0HACZC,SAAUL,KAAKkC,cACfnC,MAAOC,KAAKP,MAAMwC,OAEtB,wBACI3C,UAAU,4BACVa,KAAK,SAFT,qE,GApCyBG,cCH1BgC,G,wDCSX,WAAY9C,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACT8C,KAAM,CACF,CAAC7B,MAAO,uBAAwBW,WAAW,EAAMC,OAAO,EAAOQ,GAAI,GACnE,CAACpB,MAAO,eAAgBW,WAAW,EAAOC,OAAO,EAAOQ,GAAI,GAC5D,CAACpB,MAAO,oBAAqBW,WAAW,EAAOC,OAAO,EAAOQ,GAAI,IAErEpC,KAAM,GACNkB,OAAQ,OAEZ,EAAK4B,WAAa,EAAKA,WAAW5C,KAAhB,gBAClB,EAAK6C,QAAU,EAAKA,QAAQ7C,KAAb,gBACf,EAAK8C,cAAgB,EAAKA,cAAc9C,KAAnB,gBACrB,EAAKuB,kBAAoB,EAAKA,kBAAkBvB,KAAvB,gBACzB,EAAKsB,cAAgB,EAAKA,cAActB,KAAnB,gBACrB,EAAK+C,YAAc,EAAKA,YAAY/C,KAAjB,gBACnB,EAAKM,aAAe,EAAKA,aAAaN,KAAlB,gBACpB,EAAKgD,YAAc,EAAKA,YAAYhD,KAAjB,gBACnB,EAAKiB,eAAiB,EAAKA,eAAejB,KAApB,gBAEtB,EAAKiD,UAAY,EArBF,E,8CAwBnB,SAAWf,GACP9B,KAAKC,UAAS,YAEV,MAAO,CACHsC,KAHkB,EAAVA,KACS3B,QAAO,SAAAc,GAAI,OAAIA,EAAKI,KAAOA,W,qBAOxD,SAAQgB,GACJ,IAAMC,EAAU,CACZrC,MAAOoC,EACPzB,WAAW,EACXS,GAAI9B,KAAK6C,aAGb7C,KAAKC,UAAS,YAAa,IAAXsC,EAAU,EAAVA,KAEZ,MAAO,CACHA,KAFS,sBAAOA,GAAP,CAAaQ,U,2BAOlC,SAAcjB,EAAIkB,GACdhD,KAAKC,UAAS,YACV,MAAO,CACHsC,KAFkB,EAAVA,KAEG5B,KAAI,SAAAe,GACX,IAAMqB,EAAO,eAAOrB,GAIpB,OAHIA,EAAKI,KAAOA,IACZiB,EAAQC,IAAaD,EAAQC,IAE1BD,W,+BAMvB,SAAkBjB,GACd9B,KAAK0C,cAAcZ,EAAI,e,2BAG3B,SAAcA,GACV9B,KAAK0C,cAAcZ,EAAI,W,yBAG3B,SAAYmB,EAAOvD,GACf,OAAoB,IAAhBA,EAAKwD,OACED,EAGJA,EAAMrC,QAAO,SAAAc,GAChB,OAAOA,EAAKhB,MAAMyC,QAAQzD,IAAS,O,yBAI3C,SAAYuD,EAAOrC,GACf,MAAe,SAAXA,EACOqC,EAAMrC,QAAO,SAAAc,GAAI,OAAIA,EAAKJ,SAE1B2B,I,0BAKf,SAAavD,GACTM,KAAKC,SAAS,CAACP,W,4BAGnB,SAAekB,GACXZ,KAAKC,SAAS,CAACW,a,oBAGnB,WACI,MAA6BZ,KAAKP,MAA3B8C,EAAP,EAAOA,KAAM7C,EAAb,EAAaA,KAAMkB,EAAnB,EAAmBA,OACbvB,EAAOkD,EAAK3B,QAAO,SAAAc,GAAI,OAAIA,EAAKJ,SAAO4B,OACvC9D,EAAQmD,EAAKW,OAEbE,EAAepD,KAAK4C,YAAY5C,KAAK2C,YAAYJ,EAAM7C,GAAOkB,GAEpE,OACI,sBAAKtB,UAAU,MAAf,UACI,cAAC,EAAD,CACIF,MAAOA,EACPC,KAAMA,IAEV,sBAAKC,UAAU,sBAAf,UACI,cAAC,EAAD,CACIY,aAAcF,KAAKE,eACvB,cAAC,EAAD,CACIU,OAAQA,EACRC,eAAgBb,KAAKa,oBAE7B,cAAC,EAAD,CACIW,MAAO4B,EACPnC,SAAUjB,KAAKwC,WACfrB,kBAAmBnB,KAAKmB,kBACxBD,cAAelB,KAAKkB,gBACxB,cAAC,EAAD,CACImB,MAAOrC,KAAKyC,iB,GA5HCnC,cCJjC+C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2984ffb3.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\nexport default AppHeader;","import React from \"react\";\r\n\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({total, like}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Kabanov Nikita</h1>\r\n            <h2>{total} записей, из них понравилось {like}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import SearchPanel from \"./search-panel\";\r\nexport default SearchPanel;","import React, {Component} from \"react\";\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: ''\r\n        }\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    }\r\n    \r\n    onUpdateSearch(evt) {\r\n        const term = evt.target.value;\r\n        this.setState({term}); //{term} === {term: term}\r\n        this.props.updateSearch(term);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input\r\n                className=\"form-control search-input\"\r\n                type=\"text\"\r\n                placeholder=\"Поиск по записям\"\r\n                value={this.state.term}\r\n                onChange={this.onUpdateSearch}\r\n            />\r\n        )\r\n    }\r\n};","import PostStatusFilter from './post-status-filter';\r\nexport default PostStatusFilter;","import React, { Component } from \"react\";\r\n\r\nimport './post-status-filter.css';\r\n\r\nexport default class PostStatusFilter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttons = [\r\n            {name: 'all', label: 'Все'},\r\n            {name: 'like', label: 'Понравилось'}\r\n        ];\r\n    }\r\n    \r\n    render() {\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const {filter, onFilterSelect} = this.props;\r\n            //активный класс в зависимости от фильтра\r\n            const active = (filter === name) ? 'btn-info' : 'btn-outline-secondary';\r\n            return (\r\n                <button \r\n                    key={name} \r\n                    className={`btn ${active}`}\r\n                    onClick={() => onFilterSelect(name)}>{label}</button>\r\n            )\r\n        });\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n};","import PostListItem from './post-list-item';\r\nexport default PostListItem;","import React, {Component} from \"react\";\r\n\r\nimport './post-list-item.css';\r\n\r\nexport default class PostListItem extends Component {\r\n   \r\n    render() {\r\n        const {label, onDelete, onToggleLiked, onToggleImportant, important, liked} = this.props;\r\n        let classNames = 'app-list-item d-flex justify-content-between';\r\n        \r\n        if (important) {\r\n            classNames += ' important';\r\n        }\r\n        \r\n        if (liked) {\r\n            classNames += ' like';\r\n        }\r\n\r\n        return (\r\n            <div className={classNames}>\r\n                <span className=\"app-list-item-label\"\r\n                onClick={onToggleLiked}>\r\n                    {label}\r\n                </span>\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <button className=\"btn-star btn-sm\"\r\n                    onClick={onToggleImportant}>\r\n                        <i className=\"fa fa-star\"></i>\r\n                    </button>\r\n                    <button className=\"btn-trash btn-sm\"\r\n                    onClick={onDelete}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                    <i className=\"fa fa-heart\"></i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import PostList from './post-list';\r\nexport default PostList;","import React from \"react\";\r\nimport PostListItem from '../post-list-item';\r\n\r\nimport './post-list.css';\r\n\r\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLiked}) => {\r\n\r\n    const elements = posts.map(item => {\r\n        if (typeof item === 'object' && isEmpty(item)) {\r\n            const {id, ...itemProps} = item;\r\n            return (\r\n                <li key={id} className=\"list-group-item\">\r\n                    <PostListItem \r\n                        {...itemProps}\r\n                        onDelete={() => onDelete(id)}\r\n                        onToggleImportant={() => onToggleImportant(id)}\r\n                        onToggleLiked={() => onToggleLiked(id)}/>\r\n                </li>\r\n            )\r\n        }\r\n    });\r\n\r\n    // проверка на заполнение данными\r\n    function isEmpty(obj) {\r\n        for (let key in obj) {\r\n            return true;\r\n        }\r\n            return false;\r\n    }\r\n\r\n    return (\r\n        <ul className=\"app-list list-group\">\r\n            {elements}\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default PostList;","import PostAddForm from './post-add-form';\r\nexport default PostAddForm;","import React, {Component} from \"react\";\r\n\r\nimport './post-add-form.css';\r\n\r\nexport default class PostAddForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: ''\r\n        }\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    };\r\n\r\n    onValueChange(evt) {\r\n        this.setState({\r\n            text: evt.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(evt) {\r\n        evt.preventDefault();\r\n        this.props.onAdd(this.state.text);\r\n        this.setState({\r\n            text: ''\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <form \r\n                className=\"bottom-panel d-flex\"\r\n                onSubmit={this.onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control new-post-label\"\r\n                    placeholder=\"О чем вы думаете сейчас?\"\r\n                    onChange={this.onValueChange}\r\n                    value={this.state.text}\r\n                />\r\n                <button\r\n                    className=\"btn btn-outline-secondary\"\r\n                    type=\"submit\">\r\n                    Добавить\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}","import App from './app';\r\nexport default App;","import React, {Component} from \"react\";\r\nimport AppHeader from \"../app-header\";\r\nimport SearchPanel from \"../search-panel\";\r\nimport PostStatusFilter from \"../post-status-filter\";\r\nimport PostList from \"../post-list\";\r\nimport PostAddForm from \"../post-add-form\";\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [\r\n                {label: 'Going to learn React', important: true, liked: false, id: 1},\r\n                {label: 'This is good', important: false, liked: false, id: 2},\r\n                {label: 'I need a break...', important: false, liked: false, id: 3}\r\n            ],\r\n            term: '',\r\n            filter: 'all'\r\n        };\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onChangeState = this.onChangeState.bind(this);\r\n        this.onToggleImportant = this.onToggleImportant.bind(this);\r\n        this.onToggleLiked = this.onToggleLiked.bind(this);\r\n        this.searchItems = this.searchItems.bind(this);\r\n        this.updateSearch = this.updateSearch.bind(this);\r\n        this.filterItems = this.filterItems.bind(this);\r\n        this.onFilterSelect = this.onFilterSelect.bind(this);\r\n\r\n        this.currentId = 4;\r\n    }\r\n\r\n    deleteItem(id) {\r\n        this.setState(({data}) => {\r\n            const newData = data.filter(item => item.id !== id);\r\n            return {\r\n                data: newData\r\n            }\r\n        });\r\n    }\r\n\r\n    addItem(textValue) {\r\n        const newItem = {\r\n            label: textValue,\r\n            important: false,\r\n            id: this.currentId++,\r\n        }\r\n\r\n        this.setState(({data}) => {\r\n            const newData = [...data, newItem];\r\n            return {\r\n                data: newData\r\n            };\r\n        });\r\n    }\r\n\r\n    onChangeState(id, property) {\r\n        this.setState(({data}) => {\r\n            return {\r\n                data: data.map(item => {\r\n                    const newItem = {...item} //клонируем item в локальной области вид-ти\r\n                    if (item.id === id) {\r\n                        newItem[property] = !newItem[property]; //меняем property на противоположное\r\n                    }\r\n                    return newItem; //обязательно вернуть новый item\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    onToggleImportant(id) {\r\n        this.onChangeState(id, 'important');\r\n    }\r\n\r\n    onToggleLiked(id) {\r\n        this.onChangeState(id, 'liked');\r\n    }\r\n\r\n    searchItems(items, term) {\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter(item => {\r\n            return item.label.indexOf(term) > -1;\r\n        });\r\n    }\r\n\r\n    filterItems(items, filter) {\r\n        if (filter === 'like') {\r\n            return items.filter(item => item.liked);\r\n        } else {\r\n            return items;\r\n        }\r\n    }\r\n\r\n    //обновляет состояния\r\n    updateSearch(term) {\r\n        this.setState({term});\r\n    }\r\n\r\n    onFilterSelect(filter) {\r\n        this.setState({filter});\r\n    }\r\n\r\n    render() {\r\n        const {data, term, filter} = this.state;\r\n        const like = data.filter(item => item.liked).length;\r\n        const total = data.length;\r\n\r\n        const visiblePosts = this.filterItems(this.searchItems(data, term), filter);\r\n\r\n        return (\r\n            <div className=\"app\">\r\n                <AppHeader\r\n                    total={total}\r\n                    like={like}\r\n                    />\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel\r\n                        updateSearch={this.updateSearch}/>\r\n                    <PostStatusFilter\r\n                        filter={filter}\r\n                        onFilterSelect={this.onFilterSelect}/>\r\n                </div>\r\n                <PostList \r\n                    posts={visiblePosts}\r\n                    onDelete={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleLiked={this.onToggleLiked}/>\r\n                <PostAddForm\r\n                    onAdd={this.addItem}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}